<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.czm.mapper.EmployeeMapper">
    <!--1
        根据姓名模糊查询员工列表，需要根据创建时间倒序排序
        注意：
        1、sql语句后面不能加分号
        2、name可能不传，所以需要把 where 改为标签
     -->
    <select id="list" resultType="com.czm.entity.Employee">
        select * from employee
                 <where>
                     <if test="name != null and name != ''">
                         name like concat('%', #{name}, '%')
                     </if>
                 </where>
        order by create_time desc
    </select>

    <!--2
        更新员工信息
        注意：
        1、xml 比较时不能把数据类型不同的进行比较，比如：test="updateTime != ''"
        2、xml 比较时不能把 0 和 ‘’ 比较，比如： test="status != ''"
    -->
    <update id="update" parameterType="com.czm.entity.Employee">
        update employee
        <set>
            <if test="name != null and name != ''"> name = #{name}, </if>
            <if test="username != null and username != ''"> username = #{username}, </if>
            <if test="password != null and password != ''"> password = #{password}, </if>
            <if test="phone != null and phone != ''"> phone = #{phone}, </if>
            <if test="sex != null and sex != ''"> sex = #{sex}, </if>
            <if test="idNumber != null and idNumber != ''"> idNumber = #{idNumber}, </if>
            <if test="updateTime != null"> update_time = #{updateTime}, </if>
            <if test="updateUser != null and updateUser != ''"> update_user = #{updateUser}, </if>
            <if test="status != null"> status = #{status}, </if>
        </set>
        where id = #{id}
    </update>

    <!--3
        根据ID查询员工信息
     -->
    <select id="getById" resultType="com.czm.entity.Employee">
        select * from employee where id = #{id}
    </select>

</mapper>
