package com.czm.d8_thread_pool;

public class Test0 {
    /*
     1、线程池
        线程池就是一个可以复用线程的技术。

        不使用线程池的问题：
            用户每发起一个请求，后台就需要创建一个新线程来处理，下次新任务来了肯定又要创建新线程处理的，
            而创建新线程的开销是很大的，如果请求过多时，肯定会产生大量的线程出来，这样会严重影响系统的性能。

     2、线程池的工作原理：线程复用。
        工作线程 WorkThread
        任务队列 WorkQueue，实现了 Runnable、Callable 接口。

     3、谁代表线程池?
        JDK5.0 起提供了代表线程池的接口：ExecutorService。

        获取线程池对象：
        方式一：
           使用 ExecutorService 的实现类 ThreadPoolExecutor 自创建一个线程池对象。

        方式二：
           使用 Executors (线程池的工具类) 调用方法返回不同特点的线程池对象。

     4、⚠️⚠️⚠️ 线程池的注意事项
        1、临时线程什么时候创建？
        新任务提交时发现核心线程都在忙，任务队列也满了，并且还可以创建临时线程，此时才会创建临时线程。
        2、什么时候会开始拒绝新任务?
        核心线程和临时线程都在忙，任务队列也满了，新的任务过来的时候才会开始拒绝任务。
     */
}
