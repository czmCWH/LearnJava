package com.czm.d1_innerClass_x;

public class Test {
    /*
     1、内部类
        是类中的五大成分之一(成员变量、方法、构造器、内部类、代码块)，如果一个类定义在另一个类的内部，这个类就是内部类。
            语法格式：
	            public class Car {
		            // 内部类
		            public class Engine {
		            }
	            }
        注意：开发中用的不多。

     2、内部类使用场景
        场景：当一个类的内部，包含了一个完整的事物，且这个事物没有必要单独设计时，就可以把这个事物设计成内部类

     3、内部类有4种形式
	 3.1、成员内部类【了解】
		它是类中的一个普通成员，无 static 修饰，类似前面我们学过的普通的成员变量、成员方法。
		它属于其外部类的对象持有。

		注意：JDK16之前，成员内部类中不能定义静态成员，JDK16开始也可以定义静态成员了

	    成员内部类访问其外部类成员的特点：
			a、成员内部类的实例方法中，同样可以直接访问其外部类的实例成员、静态成员。
			b、可以在成员内部类的实例方法中，拿到当前外部类对象，格式是：外部类名.this
	 3.2、静态内部类【了解】
	 3.3、局部内部类【了解】
	 3.4、匿名内部类【重点】

     */
    public static void main(String[] args) {
        System.out.println("============1、成员内部类=================");
        Outer1 o1 = new Outer1();
        // 成员内部类属于其外部类对象持有，需要外部类对象来创建
        Outer1.Inner i1 = o1.new Inner();
        i1.showOuter();

        Outer1.Inner i2 = new Outer1("打篮球", 180.5).new Inner();
        i2.showOuter();
        i2.printName();
    }
}
