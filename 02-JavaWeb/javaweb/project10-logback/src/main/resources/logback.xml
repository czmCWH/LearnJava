<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <!--  日志输出到控制台  -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!-- 格式化输出：
                    %d 表示日期，格式为：{yyyy-MM-dd HH:mm:ss.SSS}；
                    %thread 表示线程名；
                    %-5level 表示日志级别名（如：debug、info、warn、error等），并且从左显示5个字符宽度，不够的用空格补齐；
                    %logger{50} 表示日志记录器的名称（即，定义 Logger 传递的 name 或 class ），并且最长50个字符；
                    %msg 表示日志消息；
                    %n 表示换行符
             -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}-%msg%n</pattern>
        </encoder>
    </appender>

    <!--  日志输出到系统文件  -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--
                定义日志文件输出的文件名：
                    ./tlias 表示存储日志文件的位置；
                    %d{yyyy-MM-dd} 表示输出时间；
                    %i 表示序号，从0开始自动增加；
            -->
            <FileNamePattern>./tlias-%d{yyyy-MM-dd}-%i.log</FileNamePattern>
            <!-- 最多保留的历史日志文件数量 -->
            <MaxHistory>30</MaxHistory>
            <!-- 日志文件的最大大小，超过这个大小会触发滚动到创建新文件，默认为10MB -->
            <maxFileSize>10MB</maxFileSize>
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--  格式化输出：%d表示日期；%thread表示线程名；%-5level表示级别从左显示5个字符宽度；%logger{50}最长50个字符；%msg表示日志消息；%n表示换行符   -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}-%msg%n</pattern>
        </encoder>
    </appender>


    <!--
        level：用于指定日志输出级别，取值如下（单词大小写都支持）：
            OFF：关闭日志，所有级别日志都不会输出；
            ALL：所有级别日志都可以输出；
            debug、info、warn、error 等；
        如下日志输出级别需 >= info级别，即 log.debug 级别不会输出

     -->
    <root level="info">
        <!--
         <appender-ref ..> 表示引用日志输出到的位置：
            ref="STDOUT"，表示引用 <appender name="STDOUT" ...> 的配置
            ref="FILE"，表示引用 <appender name="FILE" ...> 的配置
         ⚠️ 如果不需要输出到某个位置，可以直接删除对应的 <appender-ref ...>
        -->
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
    </root>
</configuration>