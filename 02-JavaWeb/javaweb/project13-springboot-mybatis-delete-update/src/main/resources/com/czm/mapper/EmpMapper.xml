<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- XML 文件头需要从 Mybatis 官网中获取：https://mybatis.org/mybatis-3/zh_CN/getting-started.html  -->

<mapper namespace="com.czm.mapper.EmpMapper">
    <!-- 1、批量删除员工信息 -->
    <delete id="deleteBatch">
        delete from emp where id in
        <!-- for 循环遍历集合转化为 sql 语句，如：[1,2,3] -> (1,2,3) -->
        <foreach collection="ids" separator="," item="id" open="(" close=")">
            #{id}
        </foreach>
    </delete>


    <!-- 2、查询员工基本信息（基本信息 + 工作经历List） -->

    <!--
        <resultMap /> 标签自定义结果封装，定义sql查询结果集与java对象属性之间的映射关系。
            type：映射的Java 实体类；
            autoMapping：开启自动映射，所以映射属性不必全部写；
    -->
    <resultMap id="empResultMap" type="com.czm.entity.Emp" autoMapping="true">
        <!-- 1、<id /> 标签 ，主键映射 -->
        <id column="id" property="id"/>
        <!-- 2、<result /> 标签，普通字段映射 -->
        <result column="username" property="username" />
<!--        <result column="password" property="password" />-->
<!--        <result column="name" property="name" />-->
<!--        &lt;!&ndash;  .......   &ndash;&gt;-->
        <!-- column 代表sql查询的字段；property 表示实体类的属性，用于封装 column -->

        <!-- 设置工作经历映射关系 -->
        <!-- 3、<collection /> 标签用于封装集合数据，适用于一对多关系 -->
        <collection property="exprList" ofType="com.czm.entity.EmpExpr">
            <result column="ee_id" property="id" />
            <result column="ee_empId" property="empId" />
            <result column="ee_begin" property="begin" />
            <result column="ee_end" property="end" />
            <result column="ee_company" property="company" />
            <result column="ee_job" property="job" />
        </collection>

    </resultMap>

    <!--
         resultType="com.czm.entity.Emp" ，resultType 自动结果封装，表示 SQL 语句查询到一条数据后封装到 Emp 对象中；
         resultMap="<resultMap /> 标签的 id 属性值"，自定义（手动）结果封装，表示把查询出来的结果封装到 empResultMap 中
    -->
    <select id="getById" resultMap="empResultMap">
        select e.*,
                    ex.id ee_id,
                    ex.emp_id ee_empId,
                    ex.begin ee_begin,
                    ex.end ee_end,
                    ex.company ee_company,
                    ex.job ee_job
        from emp e left join emp_expr ex on e.id = ex.emp_id
        where e.id = #{empId};
    </select>


    <!-- 3、根据 id 修改员工基本信息 -->
    <update id="update">
        update emp
        <!--
         <set> 标签的作用：
            自动生成set关键字；
            会自动删除掉更新字段后多余的逗号；（因为，更新时条件是动态的，导致生成的sql语句会存在多余逗号）
         -->
        <set>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="job != null">job = #{job},</if>
            <if test="salary != null">salary = #{salary},</if>
            <if test="image != null and image != ''">image = #{image},</if>
            <if test="entryDate != null">entry_date = #{entryDate},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
        where id = #{id}
    </update>
</mapper>